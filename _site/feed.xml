<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>~/personal/web/logs</title>
    <description>Personal website, blogs and other updates</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 16 Nov 2019 23:15:33 +0530</pubDate>
    <lastBuildDate>Sat, 16 Nov 2019 23:15:33 +0530</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Install python3.6+ for local user on remote machine without root access</title>
        <description>&lt;p&gt;I have recently encountered an issue where I have access to remote server, but the python version installed on it was 3.4. My application required 3.6+ and I do not have root access to install it using apt. So here are the steps I have followed: -&lt;/p&gt;

&lt;h3 id=&quot;installing-python-36-works-with-any-version-per-say&quot;&gt;Installing Python 3.6 (works with any version per say)&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Get the official download link from python.org website(Example. https://www.python.org/ftp/python/3.6.9/Python-3.6.9.tgz)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Download the python source release and get the folder readied for installation from source.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;$ wget https://www.python.org/ftp/python/3.6.9/Python-3.6.9.tgz&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$ tar zxfv Python-3.6.9.tgz&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$ find ~/inflated_location/Python-3.6.9/Python -type d | xargs chmod &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0755&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$ cd Python-3.6.9&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;Install from source&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;$ ./configure --prefix=~/inflated_location/Python-3.6.9/Python&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$ make&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$ make install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;Export the path variable&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;$ nano ~/.bashrc&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$ export PATH=~/inflated_folder/python/Python-3.6.9/:$PATH&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$ source ~/.bashrc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you have python3.6 installed for logged in user and can be invoked now using command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;installing-py-packages&quot;&gt;Installing py packages.&lt;/h3&gt;

&lt;p&gt;The easiest way that I have followed is&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;$ python -m pip install &amp;lt;package-name&amp;gt; --user&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sun, 27 Oct 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/python/2019/10/27/Install-Python-copy.html</link>
        <guid isPermaLink="true">http://localhost:4000/python/2019/10/27/Install-Python-copy.html</guid>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Python packages I keep a watch on</title>
        <description>&lt;p&gt;Libraries on my watch list! This is page is under construction&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Numpy&lt;/li&gt;
  &lt;li&gt;Pandas&lt;/li&gt;
  &lt;li&gt;tensorflow&lt;/li&gt;
  &lt;li&gt;keras&lt;/li&gt;
  &lt;li&gt;sklearn&lt;/li&gt;
  &lt;li&gt;scipy&lt;/li&gt;
  &lt;li&gt;matplotlib&lt;/li&gt;
  &lt;li&gt;plotly_express &lt;a href=&quot;https://mlwhiz.com/blog/2019/05/05/plotly_express/?utm_campaign=pythons-one-liner-graph-creation-library-with-animations-hans-rosling-style&amp;amp;utm_medium=social_link&amp;amp;utm_source=missinglettr-twitter&quot;&gt;Ref&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Streamlit - For web app of ml model &lt;a href=&quot;https://streamlit.io/docs/&quot;&gt;Ref&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;snyk - For VA of packages&lt;/li&gt;
  &lt;li&gt;megaman - For scalable manifold learning &lt;a href=&quot;https://github.com/mmp2/megaman&quot;&gt;Ref&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All packages are being managed using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This post is not final and will be incrementally updated.&lt;/p&gt;

&lt;p&gt;Sample highligting of code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# This is a sample python code.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sat, 26 Oct 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/python/2019/10/26/Python.html</link>
        <guid isPermaLink="true">http://localhost:4000/python/2019/10/26/Python.html</guid>
        
        
        <category>python</category>
        
      </item>
    
  </channel>
</rss>
